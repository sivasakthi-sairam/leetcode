class Solution {
    public int[] decrypt(int[] code, int k) {
        int n = code.length, K = Math.abs(k);
        int[] prefixSum = new int[n];
        int sum = 0, i;
        for (i = 0;i < n;i++) {
            sum += code[i];
            prefixSum[i] = sum;
        }
        int[] result = new int[n];
        int cur, tempLen;
        for (i = 0;i < n;i++) {
            cur = 0;
            if (k < 0) {
                if (i - 1 >= 0) {
                    cur = prefixSum[i - 1];
                }
                if (i - K - 1 >= 0) {
                    cur -= prefixSum[i - K - 1];
                } else {
                    tempLen = Math.abs(i - K);
                    cur += prefixSum[n - 1] - prefixSum[n - tempLen - 1];
                }
            } else if (k > 0) {
                if (i + K < n) {
                    cur = prefixSum[i + K];
                    cur -= prefixSum[i];
                } else {
                    cur = prefixSum[n-1];
                    cur -= prefixSum[i];
                    tempLen = i + K - (n - 1);
                    cur += prefixSum[tempLen - 1];
                }
            }
            result[i] = cur;
        }
        return result;
    }
}
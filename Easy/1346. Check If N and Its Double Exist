class Solution {

    public boolean findNumDouble(int n, int l, int h, int[] arr) {
        int m;
        while (l <= h) {
            m = (l + h) / 2;
            if (arr[m] == n) {
                return true;
            } else if (arr[m] > n) {
                h = m - 1;
            } else {
                l = m + 1;
            }
        }
        return false;
    }

    public boolean checkIfExist(int[] arr) {
        Arrays.sort(arr);
        int n = arr.length;
        for (int i = 0;i < n;i++) {
            if (i-1 >= 0 && arr[i] == arr[i-1]) {
                continue;
            }
            if (arr[i] == 0) {
                if (i + 1 < n && arr[i + 1] == 0) {
                    return true;
                }
                continue;
            }
            if (findNumDouble(2 * arr[i], 0, n-1, arr)) {
                return true;
            }
        }
        return false;
    }
}
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int ans = 0;
        int size;
        TreeNode left, right;
        TreeNode cur;
        while (queue.size() > 0) {
            size = queue.size();
            for (int i = 0;i < size;i++) {
                cur = queue.poll();
                left = cur.left;
                right = cur.right;
                if (left != null && left.left == null && left.right == null) {
                    ans += left.val;
                } else if (left != null) {
                    queue.add(left);
                }
                if (right != null) {
                    queue.add(right);
                }
            }
        }
        return ans;
    }
}
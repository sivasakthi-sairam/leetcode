/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        Queue<TreeNode> pQueue = new LinkedList<>();
        pQueue.add(p);
        Queue<TreeNode> qQueue = new LinkedList<>();
        qQueue.add(q);
        int n;
        TreeNode a, b;
        while (pQueue.size() > 0 && qQueue.size() > 0) {
            n = pQueue.size();
            for (int i = 0;i < n;i++) {
                a = pQueue.remove();
                b = qQueue.remove();
                if (a == null && b != null) {
                    return false;
                } else if (a != null && b == null) {
                    return false;
                } else if (a != null && b != null) {
                    if (a.val == b.val) {
                        pQueue.add(a.left);
                        pQueue.add(a.right);
                        qQueue.add(b.left);
                        qQueue.add(b.right);
                    } else {
                        return false;
                    }
                }
            }
        }
        return true;
    }
}
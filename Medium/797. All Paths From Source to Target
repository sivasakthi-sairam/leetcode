class Solution {
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        int startNode = 0;
        int endNode = graph.length - 1;
        Queue<List<Integer>> queue = new LinkedList<>();
        queue.add(Arrays.asList(startNode));
        List<List<Integer>> result = new ArrayList<>();
        while(!queue.isEmpty()) {
            List<Integer> curr = queue.poll();
            int lastNode = curr.get(curr.size() - 1);
            if (lastNode == endNode) {
                result.add(curr);
            } else {
                for (int adjNode : graph[lastNode]) {
                    List<Integer> copyList = new ArrayList<>(curr);
                    copyList.add(adjNode);
                    queue.add(copyList);
                }
            }
        }
        return result;
    }
}
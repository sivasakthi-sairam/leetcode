/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        Queue<TreeNode> level = new LinkedList<>();
        level.add(root);
        int ans = root.val;
        int curSize, i;
        TreeNode curr;
        while (level.size() > 0) {
            curSize = level.size();
            ans = level.peek().val;
            for (i = 0;i < curSize;i++) {
                curr = level.remove();
                if (curr.left != null) {
                    level.add(curr.left);
                }
                if (curr.right != null) {
                    level.add(curr.right);
                }
            }
        }
        return ans;
    }
}
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode findMid(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null && fast.next.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }

    public ListNode reverse(ListNode head) {
        ListNode cur = head;
        ListNode prev = null;
        ListNode next = null;
        while (cur != null) {
            next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }

    public void reorderList(ListNode head) {
        ListNode mid = findMid(head);
        ListNode midNext = mid.next;
        mid.next = null;
        midNext = reverse(midNext);
        ListNode p1 = head;
        ListNode p2 = midNext;
        ListNode pNext;
        while (p1 != null && p2 != null) {
            pNext = p1.next;
            p1.next = p2;
            p1 = p2;
            p2 = pNext;
        }
    }
}
class Solution {
    public int countSquares(int[][] matrix) {
        int m = matrix.length, n = matrix[0].length;
        int maxDim = Math.min(m, n);
        int[][] dp = new int[m + 1][n + 1];
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 1;i <= maxDim;i++) {
            map.put(i, 0);
        }
        int i, j, k;
        for (i = 1;i <= m;i++) {
            for (j = 1;j <= n;j++) {
                if (matrix[i-1][j-1] == 1) {
                    dp[i][j] = Math.min(Math.min(dp[i-1][j], dp[i][j-1]), dp[i-1][j-1]) + 1;
                    for (k = dp[i][j];k >= 1;k--) {
                        map.put(k, map.get(k) + 1);
                    }
                }
            }
        }
        int ans = 0;
        for (i = 1;i <= maxDim;i++) {
            ans += map.get(i);
        }
        return ans;
    }
}
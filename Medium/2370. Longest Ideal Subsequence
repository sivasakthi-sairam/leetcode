class Solution {
    public int longestIdealString(String s, int k) {
        int n = s.length();
        int[] arr = new int[n];
        int max = 0;
        Map<Character, Integer> charMap = new HashMap<>();
        for (int i = 97;i <= 122;i++) {
            charMap.put((char) (i), -1);
        }
        char cur;
        for (int i = 0;i < n;i++) {
            arr[i] = 1;
            for (int j = 0;j <= k;j++) {
                cur = (char) (s.charAt(i) - j);
                if (charMap.containsKey(cur) && charMap.get(cur) != -1) {
                    arr[i] = Math.max(arr[i], arr[charMap.get(cur)] + 1);
                }
                cur = (char) (s.charAt(i) + j);
                if (charMap.containsKey(cur) && charMap.get(cur) != -1) {
                    arr[i] = Math.max(arr[i], arr[charMap.get(cur)] + 1);
                }
            }
            max = Math.max(max, arr[i]);
            charMap.put(s.charAt(i), i);
        }
        return max;
    }
}
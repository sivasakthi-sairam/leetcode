class Solution {
    public int maxDistance(List<List<Integer>> arrays) {
        int size = arrays.size();
        int[][] arr = new int[size * 2][2];
        int j = 0, len;
        for (int i = 0;i < size;i++) {
            len = arrays.get(i).size();
            arr[j][0] = arrays.get(i).get(0);
            arr[j][1] = i;
            j++;
            arr[j][0] = arrays.get(i).get(len - 1);
            arr[j][1] = i;
            j++;
        }
        Arrays.sort(arr, (a, b) -> {
            return a[0] - b[0];
        });
        int i = 0;
        j = (size * 2) - 1;
        if (arr[i][1] == arr[j][1]) {
            i++;
            j--;
            while (arr[i][1] == arr[i-1][1]) {
                i++;
            }
            while (arr[j][1] == arr[j+1][1]) {
                j--;
            }
        }
        int ans = Math.abs(arr[i][0] - arr[j][0]);
        ans = Math.max(ans, Math.abs(arr[0][0] - arr[j][0]));
        ans = Math.max(ans, Math.abs(arr[i][0] - arr[(size * 2) - 1][0]));
        return ans;
    }
}
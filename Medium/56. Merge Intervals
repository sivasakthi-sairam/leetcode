class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals, (a, b) -> {
            return a[0] - b[0];
        });
        int n = intervals.length;
        int i = 0;
        List<List<Integer>> bigList = new ArrayList<>();
        int start, end;
        while (i < n) {
            start = intervals[i][0];
            end = intervals[i][1];
            i++;
            while(i < n && end >= intervals[i][0]) {
                end = Math.max(end, intervals[i][1]);
                i++;
            }
            List<Integer> temp = new ArrayList<>();
            Collections.addAll(temp, start, end);
            bigList.add(temp);
        }
        int[][] result = new int[bigList.size()][2];
        for(int j = 0;j < bigList.size();j++) {
            result[j][0] = bigList.get(j).get(0);
            result[j][1] = bigList.get(j).get(1);
        }
        return result;
    }
}
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        ListNode l1Copy = list1;
        ListNode ans = l1Copy;
        for (int i = 0;i < a - 1;i++) {
            l1Copy = l1Copy.next;
        }
        for (int i = 0;i <= b;i++) {
            list1 = list1.next;
        }
        l1Copy.next = list2;
        l1Copy = l1Copy.next;
        while (l1Copy.next != null) {
            l1Copy = l1Copy.next;
        }
        l1Copy.next = list1;
        return ans;
    }
}
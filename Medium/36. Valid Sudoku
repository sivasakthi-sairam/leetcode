class Solution {
    public boolean isValidSudoku(char[][] board) {
        Map<Integer, List<Character>> rows = new HashMap<>();
        Map<Integer, List<Character>> cols = new HashMap<>();
        Map<String, List<Character>> squares = new HashMap<>();
        String currSquare;
        char c;
        for (int i = 0;i < 9;i++) {
            for (int j = 0;j < 9;j++) {
                c = board[i][j];
                if (c == '.') {
                    continue;
                }
                if (!rows.containsKey(i)) {
                    rows.put(i, new ArrayList<Character>());
                }
                if (!cols.containsKey(j)) {
                    cols.put(j, new ArrayList<Character>());
                }
                currSquare = (i / 3) + "-" + (j / 3);
                if (!squares.containsKey(currSquare)) {
                    squares.put(currSquare, new ArrayList<Character>());
                }
                if (rows.get(i).contains(c) || cols.get(j).contains(c) || squares.get(currSquare).contains(c)) {
                    return false;
                }
                rows.get(i).add(c);
                cols.get(j).add(c);
                squares.get(currSquare).add(c);
            }
        }
        return true;
    }
}
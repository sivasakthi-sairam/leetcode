/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverse(ListNode head) {
        ListNode cur = head;
        ListNode prev = null, next = null;
        while (cur != null) {
            next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }

    public ListNode removeNodes(ListNode head) {
        head = reverse(head);
        ListNode tempHead = head;
        int val;
        ListNode cur;
        while (tempHead != null) {
            val = tempHead.val;
            cur = tempHead.next;
            while (cur != null && cur.val < val) {
                cur = cur.next;
            }
            tempHead.next = cur;
            tempHead = tempHead.next;
        }
        return reverse(head);
    }
}
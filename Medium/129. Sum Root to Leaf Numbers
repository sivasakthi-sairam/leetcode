/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans;

    public void dfs(TreeNode node, String num) {
        TreeNode left = node.left;
        TreeNode right = node.right;
        if (left == null && right == null) {
            ans += Integer.parseInt(num);
        }
        if (left != null) {
            dfs (left, num + left.val);
        }
        if (right != null) {
            dfs (right, num + right.val);
        }
    }

    public int sumNumbers(TreeNode root) {
        if (root == null) {
            return 0;
        }
        ans = 0;
        dfs(root, String.valueOf(root.val));
        return ans;
    }
}
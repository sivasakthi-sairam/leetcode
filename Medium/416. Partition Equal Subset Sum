class Solution {
    public boolean dpTabulation(int[] nums, int n, int sum) {
        boolean[][] dp = new boolean[n+1][sum+1];
        for (int i = 0;i <= n;i++) {
            for (int j = 0;j <= sum;j++) {
                if (j == 0) {
                    dp[i][j] = true;
                    continue;
                }
                if (i == 0) {
                    dp[i][j] = false;
                    continue;
                }
                if (nums[i-1] > j) {
                    dp[i][j] = dp[i-1][j];
                } else {
                    dp[i][j] = dp[i-1][j] || dp[i-1][j - nums[i-1]];
                }
            }
        }
        return dp[n][sum];
    }

    public boolean canPartition(int[] nums) {
        int sum = 0;
        for (int i : nums) {
            sum += i;
        }
        if (sum % 2 == 1) {
            return false;
        }
        return dpTabulation(nums, nums.length, sum / 2);
    }
}
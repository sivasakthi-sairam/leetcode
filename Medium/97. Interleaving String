class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        int m = s1.length();
        int n = s2.length();
        if (s3.length() != (m + n)) {
            return false;
        }
        boolean[][] dp = new boolean[m+1][n+1];
        for (int i = 0;i <= m;i++) {
            for (int j = 0;j <= n;j++) {
                if (i == 0 && j == 0) {
                    dp[i][j] = true;
                    continue;
                }
                if (i == 0) {
                    if (s2.charAt(j - 1) == s3.charAt(i + j - 1)) {
                        dp[i][j] = dp[i][j-1];
                    }
                    continue;
                }
                if (j == 0) {
                    if (s1.charAt(i-1) == s3.charAt(i + j - 1)) {
                        dp[i][j] = dp[i-1][j];
                    }
                    continue;
                }
                if (s1.charAt(i-1) == s3.charAt(i+j-1) && s2.charAt(j-1) != s3.charAt(i+j-1)) {
                    dp[i][j] = dp[i-1][j];
                    continue;
                }
                if (s1.charAt(i-1) != s3.charAt(i+j-1) && s2.charAt(j-1) == s3.charAt(i+j-1)) {
                    dp[i][j] = dp[i][j-1];
                    continue;
                }
                if (s1.charAt(i-1) == s3.charAt(i+j-1) && s2.charAt(j-1) == s3.charAt(i+j-1)) {
                    dp[i][j] = dp[i][j-1] || dp[i-1][j];
                    continue;
                }
            }
        }
        return dp[m][n];
    }
}
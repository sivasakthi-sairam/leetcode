class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for (int i : nums) {
            sum += i;
        }
        if ((sum + target) < 0 || (sum + target) % 2 == 1) {
            return 0;
        }
        int val = (sum + target) / 2;
        int n = nums.length;
        int[][] dp = new int[n+1][val+1];
        for (int i = 0;i <= n;i++) {
            for (int j = 0;j <= val;j++) {
                if (j == 0 && i == 0) {
                    dp[i][j] = 1;
                    continue;
                }
                if (i == 0) {continue;}
                if (nums[i-1] > j) {
                    dp[i][j] = dp[i-1][j];
                } else {
                    dp[i][j] = dp[i-1][j] + dp[i-1][j - nums[i-1]];
                }
            }
        }
        return dp[n][val];
    }
}
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static int result;

    public static int findMaxPathSum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int left = findMaxPathSum(root.left);
        int right = findMaxPathSum(root.right);
        int max_straight = Math.max(Math.max(left, right) + root.val, root.val);
        int max_caseVal = Math.max(max_straight, left + right + root.val);
        result = Math.max(result, max_caseVal);
        return max_straight;
    }

    public int maxPathSum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        result = Integer.MIN_VALUE;
        findMaxPathSum(root);
        return result;
    }
}
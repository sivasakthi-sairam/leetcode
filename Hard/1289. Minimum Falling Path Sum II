class Solution {
    public int minFallingPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        int ans = Integer.MAX_VALUE;
        for (int i = 0;i < n;i++) {
            dp[0][i] = grid[0][i];
            ans = Math.min(ans, dp[0][i]);
        }
        if (m == 1) {
            return ans;
        }
        ans = Integer.MAX_VALUE;
        for (int i = 1;i < m;i++) {
            Arrays.fill(dp[i], Integer.MAX_VALUE);
            for (int j = 0;j < n;j++) {
                for (int k = 0;k < n;k++) {
                    if (k == j) {
                        continue;
                    }
                    dp[i][j] = Math.min(dp[i][j], grid[i][j] + dp[i-1][k]);
                }
                if (i == m-1) {
                    ans = Math.min(ans, dp[i][j]);
                }
            }
        }
        return ans;
    }
}
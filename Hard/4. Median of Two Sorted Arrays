class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len = nums1.length + nums2.length;
        int i = 0, j = 0, k = 0;
        double ans = 0;
        boolean found = false;
        while(i < nums1.length && j < nums2.length) {
            if ((len % 2 == 1) && k == len/2) {
                if (nums1[i] < nums2[j]) {
                    ans += nums1[i];
                } else {
                    ans += nums2[j];
                }
                found = true;
                break;
            } else if ((len % 2 == 0) && k == ((len/2) - 1)) {
                if (nums1[i] < nums2[j]) {
                    ans += nums1[i];
                    i++;
                } else {
                    ans += nums2[j];
                    j++;
                }
            } else if ((len % 2 == 0) && k == len/2) {
                if (nums1[i] < nums2[j]) {
                    ans += nums1[i];
                } else {
                    ans += nums2[j];
                }
                found = true;
                break;
            } else {
                if (nums1[i] < nums2[j]) {
                    i++;
                } else {
                    j++;
                }
            }
            k++;
        }
        if (!found) {
            while (i < nums1.length) {
                if ((len % 2 == 1) && (k == len/2)) {
                    ans += nums1[i];
                    break;
                } else if ((len % 2 == 0) && ((k == len/2) || (k == (len/2) - 1))) {
                    ans += nums1[i];
                    if (k == len/2){
                        break;
                    }
                }
                i++;
                k++;
            }
            while (j < nums2.length) {
                if ((len % 2 == 1) && (k == len/2)) {
                    ans += nums2[j];
                    break;
                } else if ((len % 2 == 0) && ((k == len/2) || (k == (len/2) - 1))) {
                    ans += nums2[j];
                    if (k == len/2) {
                        break;
                    }
                }
                j++;
                k++;
            }
        }
        if (len % 2 == 0) {
            return ans/2;
        } else {
            return ans;
        }
    }
}
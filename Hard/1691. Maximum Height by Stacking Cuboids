class Solution {
    public int maxHeight(int[][] cuboids) {
        for (int[] arr : cuboids) {
            Arrays.sort(arr);
        }
        Arrays.sort(cuboids, (a, b) -> {
            if (a[0] == b[0]) {
                if (a[1] == b[1]) {
                    return a[2] - b[2];
                }
                return a[1] - b[1];
            }
            return a[0] - b[0];
        });
        int n = cuboids.length;
        int[] dp = new int[n];
        for (int i = 0;i < n;i++) {
            dp[i] = cuboids[i][2];
            for (int j = 0;j < i;j++) {
                if (cuboids[i][0] >= cuboids[j][0] && cuboids[i][1] >= cuboids[j][1] && cuboids[i][2] >= cuboids[j][2]) {
                    dp[i] = Math.max(dp[i], dp[j] + cuboids[i][2]);
                }
            }
        }
        int max = 0;
        for (int i : dp) {
            max = Math.max(max, i);
        }
        return max;
    }
}